name: Test examples

on: push

jobs:

  test-python-examples:

    runs-on: ubuntu-22.04

    defaults:
      run:
        shell: bash -l {0}

    permissions:
      contents: write

    steps:
      
      - name: Checkout
        uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          channels: conda-forge
          activate-environment: env-project
          environment-file: conda-environment.yml
      
      - name: Install R and packages
        run: |
          sudo ./linux_install_R.sh  --ggplot2

      - name: PGIS2 data
        run: |
          ./subjects/PGIS2/soubory/get_data.sh

      - name: PGIS2 skripty
        run: |
          FILES="./subjects/PGIS2/skripty/*.py"
          for FILE in $FILES
          do
            echo "--------------------"
            echo "*** $FILE ***"
            python3 $FILE 
          done

  test-r-examples:

    runs-on: ubuntu-22.04

    defaults:
      run:
        shell: bash -l {0}

    permissions:
      contents: write
    
    env:
      R_LIBS_USER: /tmp/Rlibs

    steps:
            
      - name: R env setup
        run: |
          mkdir -p $R_LIBS_USER
          echo "R_LIBS_USER=$R_LIBS_USER" > $HOME/.Renviron
          cat $HOME/.Renviron

      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install R and packages
        run: |
          sudo ./linux_install_R.sh  --all
      
      - name: IDG skripty
        run: |
          FILES="./subjects/IDG/skripty/*.R"
          for FILE in $FILES
          do
            echo "--------------------"
            echo "*** $FILE ***"
            Rscript $FILE 
          done    
          FILES="./subjects/IDG/skripty/*.Rmd"
          for FILE in $FILES
          do
            echo "--------------------"
            echo "*** $FILE ***"
            Rscript -e "rmarkdown::render('$FILE')" 
          done

  test-postgresql-examples:

    runs-on: ubuntu-22.04

    defaults:
      run:
        shell: bash -l {0}

    permissions:
      contents: write
    
    steps:
            
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: PostgreSQL
        run: |
          docker-compose -f "PDBS2/soubory/postgresql-postgis-compose.yaml" up -d --build

      - name: Install GDAL
        run: |
          sudo apt-get -y install gdal-bin

      - name: PDBS2 data
        run: |
          cp -r ./subjects/PDBS2/soubory/ /tmp/postgres/
          ls -l /tmp/postgres

      - name: Pip install psycopg
        run: |
          pip install psycopg
      
      - name: Import spatial data to Postgis
        run: |
          cd subjects/PDBS2/soubory
          ../skripty/02_load_data_to_postgis.sh
      
      - name: Run Examples
        run: |
          python3 subjects/PDBS2/soubory/sql_scripts_runner.py PDBS2/skripty "dbname=postgres host=localhost user=postgres port=5432 password=heslo"

      - name: Stop containers
        if: always()
        run: docker-compose -f "PDBS2/soubory/postgresql-postgis-compose.yaml" down