---
title: "Knihovny [fiona]{.software}, [rasterio]{.software}, [shapely]{.software}"
subtitle: "Programování v GIS 2"
author: "Jan Caha"
date: 2024-03-18
date-format: "YYYY-MM-DD"
format: 
    clean-revealjs:
        theme: [../../reveal-custom.scss]
footer: "{{< var links.web >}}"
code-line-numbers: false
execute:
  echo: true
  eval: true
---

## Typy knihoven pro Python

- nativní knihovny - pouze Python kód
- kompilované knihovny - C, C++, Rust nebo i jiné jazyky
- nativní knihovny fungují automaticky všude, kompilované je nutné sestavit pro danou platformu a verzi Pythonu

## [fiona]{.software}, [rasterio]{.software}, [shapely]{.software}

- kompilované knihovny
- postavené nad [GDAL/OGR]{.software} (ne nad balíkem `osgeo`)
- snaha aby pracovaly více jako Python knihovny a méně jako C++ kód
- o něco měně komplikované než přímé použití [GDAL/OGR]{.software} skrze `osgeo`, o něco horší spolupráce knihoven (zejména fiona a shapely)

## [fiona]{.software}

- knihovna pro práci s vektorovými daty
- odstraňuje mnoho dílčích kroků, které jsou v `osgeo`
- souřadnicové systémy a transformace s knihovnou `pyproj`
- api není bohaté na práci s geometrií
- přístup např. ke struktuře vrstvy je velice jednoduchý
- nepodporuje vše co `osgeo`
- [dokumentace](https://fiona.readthedocs.io/en/stable/index.html)

## [shapely]{.software}

- knihovna založená na [GEOS]{.software}
- zpracování geometrií
- při využití s [fiona]{.software} nutné konverze mezi jejich typy
- [dokumntace](https://shapely.readthedocs.io/en/stable/index.html)

## Konvrze geometrií

- modul `shapely.geometry`
- z [fiona]{.software} do [shapely]{.software} funkce `shape(feature.geometry)`
- z [shapely]{.software} do [fiona]{.software} funkce `mapping()`

## [rastrio]{.software}

- knihovna pro práci s rastrovými daty
- platí pro ni v podstatě to samé co pro [fiona]{.software}
- výrazné propojení s `numpy` (knihovna pro dvou a vícerozměrné matic)
- oproti `osgeo` jednodušší přístupy
- [dokumentace](https://fiona.readthedocs.io/en/stable/index.html)
- problém s typováním - nutné hodně se opírat o dokumentaci

## [GDAL/OGR]{.software} {{< fa times >}} [fiona]{.software}, [rasterio]{.software}, [shapely]{.software}

- GDAL/OGR má širší možnosti, ale práce je komplikovanější
- knihovny jsou zjednodušené a přístupnější
- nástroje `gdal.VectorTranslate()`, `gdal.Warp()`, `gdal.Translate()` atd. určitě využívat z `osgeo`
- modifikace dat je v 90% případů snadnější z knihoven 
- komplexní situace lze řešit přímo použítím `osgeo`
- používat princip **KISS** (Keep it simple, stupid!)  -- začít s jednoduchou verzí, dokud funguje a upgradovat pouze pokud je to nutné
   
# Dotazy? {.center}